{"id":"src/utils/getErrors.js","dependencies":[{"name":"/home/bigeyestoad/Documents/gitRepos/challenges/validationLibrary/package.json","includedInParent":true,"mtime":1609100606140}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar getErrors = function getErrors(state, validationConfig) {\n  if (validationConfig.showErrors === \"always\") return state.errors;\n  if (validationConfig.showErrors === \"blur\") return Object.entries(state.blurred).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        blurred = _ref2[1];\n\n    return blurred;\n  }).reduce(function (acc, _ref3) {\n    var _ref4 = _slicedToArray(_ref3, 1),\n        name = _ref4[0];\n\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, name, state.errors[name]));\n  }, {});\n  return state.submitted ? state.errors : {};\n};\n\nvar _default = getErrors;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":26,"column":0},"source":"src/utils/getErrors.js","original":{"line":1,"column":0}},{"name":"getErrors","generated":{"line":26,"column":4},"source":"src/utils/getErrors.js","original":{"line":1,"column":6}},{"generated":{"line":26,"column":13},"source":"src/utils/getErrors.js","original":{"line":1,"column":15}},{"generated":{"line":26,"column":16},"source":"src/utils/getErrors.js","original":{"line":1,"column":18}},{"name":"getErrors","generated":{"line":26,"column":25},"source":"src/utils/getErrors.js","original":{"line":1,"column":6}},{"generated":{"line":26,"column":34},"source":"src/utils/getErrors.js","original":{"line":1,"column":18}},{"name":"state","generated":{"line":26,"column":35},"source":"src/utils/getErrors.js","original":{"line":1,"column":19}},{"generated":{"line":26,"column":40},"source":"src/utils/getErrors.js","original":{"line":1,"column":18}},{"name":"validationConfig","generated":{"line":26,"column":42},"source":"src/utils/getErrors.js","original":{"line":1,"column":26}},{"generated":{"line":26,"column":58},"source":"src/utils/getErrors.js","original":{"line":1,"column":18}},{"generated":{"line":26,"column":60},"source":"src/utils/getErrors.js","original":{"line":1,"column":47}},{"generated":{"line":27,"column":0},"source":"src/utils/getErrors.js","original":{"line":2,"column":2}},{"name":"validationConfig","generated":{"line":27,"column":6},"source":"src/utils/getErrors.js","original":{"line":2,"column":6}},{"generated":{"line":27,"column":22},"source":"src/utils/getErrors.js","original":{"line":2,"column":22}},{"name":"showErrors","generated":{"line":27,"column":23},"source":"src/utils/getErrors.js","original":{"line":2,"column":23}},{"generated":{"line":27,"column":33},"source":"src/utils/getErrors.js","original":{"line":2,"column":6}},{"generated":{"line":27,"column":38},"source":"src/utils/getErrors.js","original":{"line":2,"column":38}},{"generated":{"line":27,"column":46},"source":"src/utils/getErrors.js","original":{"line":2,"column":2}},{"generated":{"line":27,"column":48},"source":"src/utils/getErrors.js","original":{"line":2,"column":48}},{"name":"state","generated":{"line":27,"column":55},"source":"src/utils/getErrors.js","original":{"line":2,"column":55}},{"generated":{"line":27,"column":60},"source":"src/utils/getErrors.js","original":{"line":2,"column":60}},{"name":"errors","generated":{"line":27,"column":61},"source":"src/utils/getErrors.js","original":{"line":2,"column":61}},{"generated":{"line":27,"column":67},"source":"src/utils/getErrors.js","original":{"line":2,"column":48}},{"generated":{"line":28,"column":0},"source":"src/utils/getErrors.js","original":{"line":4,"column":2}},{"name":"validationConfig","generated":{"line":28,"column":6},"source":"src/utils/getErrors.js","original":{"line":4,"column":6}},{"generated":{"line":28,"column":22},"source":"src/utils/getErrors.js","original":{"line":4,"column":22}},{"name":"showErrors","generated":{"line":28,"column":23},"source":"src/utils/getErrors.js","original":{"line":4,"column":23}},{"generated":{"line":28,"column":33},"source":"src/utils/getErrors.js","original":{"line":4,"column":6}},{"generated":{"line":28,"column":38},"source":"src/utils/getErrors.js","original":{"line":4,"column":38}},{"generated":{"line":28,"column":44},"source":"src/utils/getErrors.js","original":{"line":4,"column":2}},{"generated":{"line":28,"column":46},"source":"src/utils/getErrors.js","original":{"line":5,"column":4}},{"name":"Object","generated":{"line":28,"column":53},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"generated":{"line":28,"column":59},"source":"src/utils/getErrors.js","original":{"line":5,"column":17}},{"name":"entries","generated":{"line":28,"column":60},"source":"src/utils/getErrors.js","original":{"line":5,"column":18}},{"generated":{"line":28,"column":67},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"name":"state","generated":{"line":28,"column":68},"source":"src/utils/getErrors.js","original":{"line":5,"column":26}},{"generated":{"line":28,"column":73},"source":"src/utils/getErrors.js","original":{"line":5,"column":31}},{"name":"blurred","generated":{"line":28,"column":74},"source":"src/utils/getErrors.js","original":{"line":5,"column":32}},{"generated":{"line":28,"column":81},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"name":"filter","generated":{"line":28,"column":83},"source":"src/utils/getErrors.js","original":{"line":6,"column":7}},{"generated":{"line":28,"column":89},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"generated":{"line":28,"column":90},"source":"src/utils/getErrors.js","original":{"line":6,"column":14}},{"generated":{"line":29,"column":0},"source":"src/utils/getErrors.js","original":{"line":6,"column":14}},{"generated":{"line":30,"column":0},"source":"src/utils/getErrors.js","original":{"line":6,"column":14}},{"name":"blurred","generated":{"line":30,"column":8},"source":"src/utils/getErrors.js","original":{"line":6,"column":18}},{"generated":{"line":30,"column":15},"source":"src/utils/getErrors.js","original":{"line":6,"column":14}},{"generated":{"line":32,"column":0},"source":"src/utils/getErrors.js","original":{"line":6,"column":14}},{"name":"blurred","generated":{"line":32,"column":11},"source":"src/utils/getErrors.js","original":{"line":6,"column":31}},{"generated":{"line":32,"column":18},"source":"src/utils/getErrors.js","original":{"line":6,"column":14}},{"generated":{"line":33,"column":0},"source":"src/utils/getErrors.js","original":{"line":6,"column":14}},{"generated":{"line":33,"column":3},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"name":"reduce","generated":{"line":33,"column":5},"source":"src/utils/getErrors.js","original":{"line":7,"column":7}},{"generated":{"line":33,"column":11},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"generated":{"line":33,"column":12},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"name":"acc","generated":{"line":33,"column":22},"source":"src/utils/getErrors.js","original":{"line":7,"column":15}},{"generated":{"line":33,"column":25},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"generated":{"line":34,"column":0},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"generated":{"line":35,"column":0},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"name":"name","generated":{"line":35,"column":8},"source":"src/utils/getErrors.js","original":{"line":7,"column":21}},{"generated":{"line":35,"column":12},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"generated":{"line":37,"column":0},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"name":"acc","generated":{"line":37,"column":43},"source":"src/utils/getErrors.js","original":{"line":7,"column":37}},{"generated":{"line":37,"column":46},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"name":"name","generated":{"line":37,"column":73},"source":"src/utils/getErrors.js","original":{"line":7,"column":43}},{"generated":{"line":37,"column":77},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"name":"state","generated":{"line":37,"column":79},"source":"src/utils/getErrors.js","original":{"line":7,"column":50}},{"generated":{"line":37,"column":84},"source":"src/utils/getErrors.js","original":{"line":7,"column":55}},{"name":"errors","generated":{"line":37,"column":85},"source":"src/utils/getErrors.js","original":{"line":7,"column":56}},{"generated":{"line":37,"column":91},"source":"src/utils/getErrors.js","original":{"line":7,"column":50}},{"name":"name","generated":{"line":37,"column":92},"source":"src/utils/getErrors.js","original":{"line":7,"column":63}},{"generated":{"line":37,"column":96},"source":"src/utils/getErrors.js","original":{"line":7,"column":50}},{"generated":{"line":37,"column":97},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"generated":{"line":38,"column":0},"source":"src/utils/getErrors.js","original":{"line":7,"column":14}},{"generated":{"line":38,"column":3},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"generated":{"line":38,"column":5},"source":"src/utils/getErrors.js","original":{"line":7,"column":73}},{"generated":{"line":38,"column":7},"source":"src/utils/getErrors.js","original":{"line":5,"column":11}},{"generated":{"line":38,"column":8},"source":"src/utils/getErrors.js","original":{"line":5,"column":4}},{"generated":{"line":39,"column":0},"source":"src/utils/getErrors.js","original":{"line":9,"column":2}},{"name":"state","generated":{"line":39,"column":9},"source":"src/utils/getErrors.js","original":{"line":9,"column":9}},{"generated":{"line":39,"column":14},"source":"src/utils/getErrors.js","original":{"line":9,"column":14}},{"name":"submitted","generated":{"line":39,"column":15},"source":"src/utils/getErrors.js","original":{"line":9,"column":15}},{"generated":{"line":39,"column":24},"source":"src/utils/getErrors.js","original":{"line":9,"column":9}},{"name":"state","generated":{"line":39,"column":27},"source":"src/utils/getErrors.js","original":{"line":9,"column":27}},{"generated":{"line":39,"column":32},"source":"src/utils/getErrors.js","original":{"line":9,"column":32}},{"name":"errors","generated":{"line":39,"column":33},"source":"src/utils/getErrors.js","original":{"line":9,"column":33}},{"generated":{"line":39,"column":39},"source":"src/utils/getErrors.js","original":{"line":9,"column":9}},{"generated":{"line":39,"column":42},"source":"src/utils/getErrors.js","original":{"line":9,"column":42}},{"generated":{"line":39,"column":44},"source":"src/utils/getErrors.js","original":{"line":9,"column":2}},{"generated":{"line":40,"column":0},"source":"src/utils/getErrors.js","original":{"line":10,"column":1}},{"generated":{"line":40,"column":1},"source":"src/utils/getErrors.js","original":{"line":1,"column":0}},{"name":"getErrors","generated":{"line":42,"column":15},"source":"src/utils/getErrors.js","original":{"line":12,"column":15}}],"sources":{"src/utils/getErrors.js":"const getErrors = (state, validationConfig) => {\n  if (validationConfig.showErrors === \"always\") return state.errors;\n\n  if (validationConfig.showErrors === \"blur\")\n    return Object.entries(state.blurred)\n      .filter(([, blurred]) => blurred)\n      .reduce((acc, [name]) => ({ ...acc, [name]: state.errors[name] }), {});\n\n  return state.submitted ? state.errors : {};\n};\n\nexport default getErrors;\n"},"lineCount":null}},"error":null,"hash":"d3d93c3e6e1e584c877ee3837e8aa334","cacheData":{"env":{}}}